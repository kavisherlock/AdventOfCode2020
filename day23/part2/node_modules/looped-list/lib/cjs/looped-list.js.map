{"version":3,"file":"looped-list.js","sources":["../../src/looped-list-item.js","../../src/looped-list.js"],"sourcesContent":["class LoopedListItem {\n    /**\n     * @param {Any} value\n     * @param {Boolean} [is_first=false]\n     */\n    constructor(value, is_first = false) {\n        this.value = value;\n\n        // Pointers to other LoopedListItems\n        this.next_item = undefined;\n        this.prev_item = undefined;\n\n        // Set next and prev to itself\n        if (is_first) {\n            this.next_item = this;\n            this.prev_item = this;\n        }\n    }\n\n    /**\n     * @param {Number} n\n     * @returns {LoopedListItem}\n     */\n    next(n = 1) {\n        n = Math.trunc(n);\n\n        if (n === 0) {\n            return this;\n        } else if (n < 0) {\n            return this.prev(Math.abs(n));\n        }\n\n        let current = this;\n        do {\n            current = current.next_item;\n        } while (--n);\n        return current;\n    }\n\n    /**\n     * @param {Number} n\n     * @returns {LoopedListItem}\n     */\n    prev(n = 1) {\n        n = Math.trunc(n);\n\n        if (n === 0) {\n            return this;\n        } else if (n < 0) {\n            return this.next(Math.abs(n));\n        }\n\n        let current = this;\n        do {\n            current = current.prev_item;\n        } while (--n);\n        return current;\n    }\n\n    /**\n     * @param {LoopedListItem} item\n     * @returns {LoopedListItem} Returns the item we just inserted\n     */\n    insertNext(item) {\n        this.next_item.prev_item = item;\n        item.next_item = this.next_item;\n\n        this.next_item = item;\n        item.prev_item = this;\n\n        return item;\n    }\n\n    /**\n     * @param {LoopedListItem} item\n     * @returns {LoopedListItem} Returns the item we just inserted\n     */\n    insertPrev(item) {\n        this.prev_item.next_item = item;\n        item.next_item = this;\n\n        item.prev_item = this.prev_item;\n        this.prev_item = item;\n\n        return item;\n    }\n\n    /**\n     * @returns {LoopedListItem}\n     */\n    removeSelf() {\n        this.next_item.prev_item = this.prev_item;\n        this.prev_item.next_item = this.next_item;\n\n        return this;\n    }\n}\n\nexport default LoopedListItem;\n","import LoopedListItem from './looped-list-item';\n\nclass LoopedList {\n    /**\n     * @param {Any} value\n     */\n    constructor(value) {\n        // Keep head unset if we didn't pass in a value\n        this.head = undefined;\n\n        if (Array.isArray(value) && value.length) {\n            /**\n             * When an array is passed, use the first value as the `head`,\n             * and loop through other values and insert them.\n             */\n            let intial_value = value[0];\n\n            this.setHead(intial_value);\n\n            if (value.length > 2) {\n                // Loop through remaining values\n                for (let i = 1; i < value.length; i++) {\n                    this.insertNext(value[i]);\n                }\n\n                // Move forward one tick to reset head back to `intial_value`\n                this.move(1);\n            }\n        } else if (typeof value !== 'undefined') {\n            this.setHead(value);\n        }\n    }\n\n    /**\n     * @chainable\n     * @param {Any} value - If the value is not a `LoopedListItem`, it'll be converted into one, unless `undefined` is passed, which essentially \"unsets\" the head.\n     * @returns {LoopedList} Returns `this`\n     */\n    setHead(value) {\n        if (!(value instanceof LoopedListItem) && value !== undefined) {\n            value = new LoopedListItem(value, true);\n        }\n        this.head = value;\n\n        return this;\n    }\n\n    /**\n     * Sets the `head` to `undefined`, effectively removing all list items.\n     * @chainable\n     * @returns {LoopedList} Returns `this`\n     */\n    unsetHead() {\n        return this.setHead(undefined);\n    }\n\n    /**\n     * @deprecated - Use `setHead(value)` instead.\n     */\n    init(...args) {\n        return this.setHead(...args);\n    }\n\n    /**\n     * Moves the head pointer forward or backward by a number of steps.\n     * @chainable\n     * @param {Number} steps Any number. If a negative number is passed, the head pointer moves backwards.\n     * @returns {LoopedList} Returns `this`\n     */\n    move(steps = 1) {\n        steps = Math.trunc(steps);\n\n        // Steps can be negative to move backwards\n        let direction = steps > 0 ? 'next' : 'prev';\n\n        steps = Math.abs(steps);\n        this.head = this.head[direction](steps);\n\n        return this;\n    }\n\n    /**\n     * @chainable\n     * @param {Any|LoopedListItem} item\n     * @returns {LoopedList} Returns `this`\n     */\n    insertNext(item) {\n        if (!(item instanceof LoopedListItem)) {\n            item = new LoopedListItem(item);\n        }\n        this.head = this.head.insertNext(item);\n\n        return this;\n    }\n\n    /**\n     * @chainable\n     * @param {Any|LoopedListItem} item\n     * @returns {LoopedList} Returns `this`\n     */\n    insertPrev(item) {\n        if (!(item instanceof LoopedListItem)) {\n            item = new LoopedListItem(item);\n        }\n        this.head = this.head.insertPrev(item);\n\n        return this;\n    }\n\n    /**\n     * @returns {LoopedListItem} Returns the old `head`\n     */\n    popHeadMoveNext() {\n        let next_item = this.head.next_item;\n        let old_head = this.head.removeSelf();\n        this.head = next_item;\n\n        return old_head;\n    }\n\n    /**\n     * @returns {LoopedListItem} Returns the old `head`\n     */\n    popHeadMovePrev() {\n        let prev_item = this.head.prev_item;\n        let old_head = this.head.removeSelf();\n        this.head = prev_item;\n\n        return old_head;\n    }\n\n    /**\n     * @returns {Number} Returns the number of items in our LoopedList.\n     */\n    length() {\n        let head = this.head;\n\n        if (!head) {\n            return 0;\n        }\n\n        let next = head.next_item;\n\n        let length = 1;\n\n        while (next !== head) {\n            length++;\n            next = next.next_item;\n        }\n\n        return length;\n    }\n\n    /**\n     * Searches for the item and returns that item if it is found. Returns `undefined` if the value is not found.\n     * @param {Any|LoopedListItem} value You can pass in a primative value or a `LoopedListItem`.\n     * @returns {LoopedListItem|undefined}\n     */\n    find(value) {\n        let get_value = !(value instanceof LoopedListItem);\n        let head = this.head;\n\n        if (!head) {\n            return;\n        }\n\n        let next = this.head;\n\n        do {\n            let next_value = get_value ? next.value : next;\n            if (value === next_value) {\n                return next;\n            }\n            next = next.next_item;\n        } while (next !== head);\n    }\n\n    /**\n     * An iterator for the `LoopedListItem` objects.\n     * @alias LoopedList.prototype[@@iterator]\n     * @generator\n     * @function\n     * @returns {Any} Yields the `LoopedListItem` objects in our list, starting with `this.head`.\n     */\n    *[Symbol.iterator]() {\n        yield* this.items();\n    }\n\n    /**\n     * An iterator for the `LoopedListItem` objects.\n     * @generator\n     * @returns {Any} Yields the `LoopedListItem` objects in our list, starting with `this.head`.\n     */\n    *items() {\n        let head = this.head;\n\n        if (!head) {\n            return;\n        }\n\n        yield head;\n\n        let next = head.next_item;\n\n        while (next !== head) {\n            yield next;\n            next = next.next_item;\n        }\n    }\n\n    /**\n     * An iterator for _values_ of the `LoopedListItem` objects.\n     * @generator\n     * @returns {Any} Yields the _values_ of the `LoopedListItem` objects in our list, starting with `this.head`.\n     * @example assert.deepStrictEqual([...(new LoopedList([1, 2, 3])).values()], [1, 2, 3]);\n     */\n    *values() {\n        let items = this.items();\n        for (let item of items) {\n            yield item.value;\n        }\n    }\n}\n\nexport default LoopedList;\n"],"names":["LoopedListItem","constructor","value","is_first","next_item","undefined","prev_item","next","n","Math","trunc","prev","abs","current","insertNext","item","insertPrev","removeSelf","LoopedList","head","Array","isArray","length","intial_value","setHead","i","move","unsetHead","init","args","steps","direction","popHeadMoveNext","old_head","popHeadMovePrev","find","get_value","next_value","Symbol","iterator","items","values"],"mappings":"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"}